{"abi":[{"type":"function","name":"GENESIS_PAYMENT_TIMESTAMP","inputs":[],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"MAX_FUTURE_LENGTH","inputs":[],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"MAX_PAYMENT_DURATION","inputs":[],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"MAX_RETROACTIVE_LENGTH","inputs":[],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"activationDelay","inputs":[],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"calculateEarnerLeafHash","inputs":[{"name":"leaf","type":"tuple","internalType":"struct IPaymentCoordinator.EarnerTreeMerkleLeaf","components":[{"name":"earner","type":"address","internalType":"address"},{"name":"earnerTokenRoot","type":"bytes32","internalType":"bytes32"}]}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"calculateTokenLeafHash","inputs":[{"name":"leaf","type":"tuple","internalType":"struct IPaymentCoordinator.TokenTreeMerkleLeaf","components":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"cumulativeEarnings","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"calculationIntervalSeconds","inputs":[],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"checkClaim","inputs":[{"name":"claim","type":"tuple","internalType":"struct IPaymentCoordinator.PaymentMerkleClaim","components":[{"name":"rootIndex","type":"uint32","internalType":"uint32"},{"name":"earnerIndex","type":"uint32","internalType":"uint32"},{"name":"earnerTreeProof","type":"bytes","internalType":"bytes"},{"name":"earnerLeaf","type":"tuple","internalType":"struct IPaymentCoordinator.EarnerTreeMerkleLeaf","components":[{"name":"earner","type":"address","internalType":"address"},{"name":"earnerTokenRoot","type":"bytes32","internalType":"bytes32"}]},{"name":"tokenIndices","type":"uint32[]","internalType":"uint32[]"},{"name":"tokenTreeProofs","type":"bytes[]","internalType":"bytes[]"},{"name":"tokenLeaves","type":"tuple[]","internalType":"struct IPaymentCoordinator.TokenTreeMerkleLeaf[]","components":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"cumulativeEarnings","type":"uint256","internalType":"uint256"}]}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"claimerFor","inputs":[{"name":"earner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"cumulativeClaimed","inputs":[{"name":"claimer","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"contract IERC20"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"globalOperatorCommissionBips","inputs":[],"outputs":[{"name":"","type":"uint16","internalType":"uint16"}],"stateMutability":"view"},{"type":"function","name":"payAllForRange","inputs":[{"name":"rangePayment","type":"tuple[]","internalType":"struct IPaymentCoordinator.RangePayment[]","components":[{"name":"strategiesAndMultipliers","type":"tuple[]","internalType":"struct IPaymentCoordinator.StrategyAndMultiplier[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]},{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"startTimestamp","type":"uint32","internalType":"uint32"},{"name":"duration","type":"uint32","internalType":"uint32"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"payForRange","inputs":[{"name":"rangePayments","type":"tuple[]","internalType":"struct IPaymentCoordinator.RangePayment[]","components":[{"name":"strategiesAndMultipliers","type":"tuple[]","internalType":"struct IPaymentCoordinator.StrategyAndMultiplier[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]},{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"startTimestamp","type":"uint32","internalType":"uint32"},{"name":"duration","type":"uint32","internalType":"uint32"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"paymentUpdater","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"processClaim","inputs":[{"name":"claim","type":"tuple","internalType":"struct IPaymentCoordinator.PaymentMerkleClaim","components":[{"name":"rootIndex","type":"uint32","internalType":"uint32"},{"name":"earnerIndex","type":"uint32","internalType":"uint32"},{"name":"earnerTreeProof","type":"bytes","internalType":"bytes"},{"name":"earnerLeaf","type":"tuple","internalType":"struct IPaymentCoordinator.EarnerTreeMerkleLeaf","components":[{"name":"earner","type":"address","internalType":"address"},{"name":"earnerTokenRoot","type":"bytes32","internalType":"bytes32"}]},{"name":"tokenIndices","type":"uint32[]","internalType":"uint32[]"},{"name":"tokenTreeProofs","type":"bytes[]","internalType":"bytes[]"},{"name":"tokenLeaves","type":"tuple[]","internalType":"struct IPaymentCoordinator.TokenTreeMerkleLeaf[]","components":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"cumulativeEarnings","type":"uint256","internalType":"uint256"}]}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setActivationDelay","inputs":[{"name":"_activationDelay","type":"uint32","internalType":"uint32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setClaimerFor","inputs":[{"name":"claimer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setGlobalOperatorCommission","inputs":[{"name":"_globalCommissionBips","type":"uint16","internalType":"uint16"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setPaymentUpdater","inputs":[{"name":"_paymentUpdater","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"submitRoot","inputs":[{"name":"root","type":"bytes32","internalType":"bytes32"},{"name":"paymentCalculationEndTimestamp","type":"uint32","internalType":"uint32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ActivationDelaySet","inputs":[{"name":"oldActivationDelay","type":"uint32","indexed":false,"internalType":"uint32"},{"name":"newActivationDelay","type":"uint32","indexed":false,"internalType":"uint32"}],"anonymous":false},{"type":"event","name":"CalculationIntervalSecondsSet","inputs":[{"name":"oldCalculationIntervalSeconds","type":"uint32","indexed":false,"internalType":"uint32"},{"name":"newCalculationIntervalSeconds","type":"uint32","indexed":false,"internalType":"uint32"}],"anonymous":false},{"type":"event","name":"ClaimerForSet","inputs":[{"name":"earner","type":"address","indexed":true,"internalType":"address"},{"name":"oldClaimer","type":"address","indexed":true,"internalType":"address"},{"name":"claimer","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"DistributionRootSubmitted","inputs":[{"name":"rootIndex","type":"uint32","indexed":true,"internalType":"uint32"},{"name":"root","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"paymentCalculationEndTimestamp","type":"uint32","indexed":false,"internalType":"uint32"},{"name":"activatedAt","type":"uint32","indexed":false,"internalType":"uint32"}],"anonymous":false},{"type":"event","name":"GlobalCommissionBipsSet","inputs":[{"name":"oldGlobalCommissionBips","type":"uint16","indexed":false,"internalType":"uint16"},{"name":"newGlobalCommissionBips","type":"uint16","indexed":false,"internalType":"uint16"}],"anonymous":false},{"type":"event","name":"PayAllForRangeSubmitterSet","inputs":[{"name":"payAllForRangeSubmitter","type":"address","indexed":true,"internalType":"address"},{"name":"oldValue","type":"bool","indexed":true,"internalType":"bool"},{"name":"newValue","type":"bool","indexed":true,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"PaymentClaimed","inputs":[{"name":"root","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"earner","type":"address","indexed":true,"internalType":"address"},{"name":"claimer","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"contract IERC20"},{"name":"claimedAmount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"PaymentUpdaterSet","inputs":[{"name":"oldPaymentUpdater","type":"address","indexed":true,"internalType":"address"},{"name":"newPaymentUpdater","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RangePaymentCreated","inputs":[{"name":"avs","type":"address","indexed":true,"internalType":"address"},{"name":"paymentNonce","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"rangePaymentHash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"rangePayment","type":"tuple","indexed":false,"internalType":"struct IPaymentCoordinator.RangePayment","components":[{"name":"strategiesAndMultipliers","type":"tuple[]","internalType":"struct IPaymentCoordinator.StrategyAndMultiplier[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]},{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"startTimestamp","type":"uint32","internalType":"uint32"},{"name":"duration","type":"uint32","internalType":"uint32"}]}],"anonymous":false},{"type":"event","name":"RangePaymentForAllCreated","inputs":[{"name":"submitter","type":"address","indexed":true,"internalType":"address"},{"name":"paymentNonce","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"rangePaymentHash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"rangePayment","type":"tuple","indexed":false,"internalType":"struct IPaymentCoordinator.RangePayment","components":[{"name":"strategiesAndMultipliers","type":"tuple[]","internalType":"struct IPaymentCoordinator.StrategyAndMultiplier[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]},{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"startTimestamp","type":"uint32","internalType":"uint32"},{"name":"duration","type":"uint32","internalType":"uint32"}]}],"anonymous":false}],"bytecode":{"object":"0x608060405234801561001057600080fd5b50610450806100206000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80633a8c0786116100b8578063865c69531161007c578063865c69531461021b578063a0169ddd14610194578063b5715284146101a2578063e221b24514610231578063ee6195971461013c578063f8cd84481461015f57600080fd5b80633a8c07861461013c5780633efe1db6146101da57806358baaa3e146101e85780635e9d8348146101f657806366d3b16b1461021457600080fd5b806318190f53116100ff57806318190f53146101945780631b445516146101a25780632b9f64a4146101b45780632cfd45eb1461013c57806337838ed01461013c57600080fd5b806304a0c5021461013c578063092db00714610150578063149bc8721461015f578063160bc83f14610181578063169bde2b1461013c575b600080fd5b604051600081526020015b60405180910390f35b60405160008152602001610147565b61017361016d366004610257565b50600090565b604051908152602001610147565b61019261018f36600461027a565b50565b005b61019261018f3660046102cb565b6101926101b03660046102e8565b5050565b6101c261016d3660046102cb565b6040516001600160a01b039091168152602001610147565b6101926101b0366004610376565b61019261018f3660046103a2565b61020461016d36600461027a565b6040519015158152602001610147565b60006101c2565b6101736102293660046103bd565b600092915050565b61019261018f3660046103f6565b60006040828403121561025157600080fd5b50919050565b60006040828403121561026957600080fd5b610273838361023f565b9392505050565b60006020828403121561028c57600080fd5b813567ffffffffffffffff8111156102a357600080fd5b8201610100818503121561027357600080fd5b6001600160a01b038116811461018f57600080fd5b6000602082840312156102dd57600080fd5b8135610273816102b6565b600080602083850312156102fb57600080fd5b823567ffffffffffffffff8082111561031357600080fd5b818501915085601f83011261032757600080fd5b81358181111561033657600080fd5b8660208260051b850101111561034b57600080fd5b60209290920196919550909350505050565b803563ffffffff8116811461037157600080fd5b919050565b6000806040838503121561038957600080fd5b823591506103996020840161035d565b90509250929050565b6000602082840312156103b457600080fd5b6102738261035d565b600080604083850312156103d057600080fd5b82356103db816102b6565b915060208301356103eb816102b6565b809150509250929050565b60006020828403121561040857600080fd5b813561ffff8116811461027357600080fdfea264697066735822122081f98d67ec1bf0c833e3b2fecdfd3ed50ae6db587a6de9f89db778ae15cb999364736f6c634300080c0033","sourceMap":"243:5949:84:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106101375760003560e01c80633a8c0786116100b8578063865c69531161007c578063865c69531461021b578063a0169ddd14610194578063b5715284146101a2578063e221b24514610231578063ee6195971461013c578063f8cd84481461015f57600080fd5b80633a8c07861461013c5780633efe1db6146101da57806358baaa3e146101e85780635e9d8348146101f657806366d3b16b1461021457600080fd5b806318190f53116100ff57806318190f53146101945780631b445516146101a25780632b9f64a4146101b45780632cfd45eb1461013c57806337838ed01461013c57600080fd5b806304a0c5021461013c578063092db00714610150578063149bc8721461015f578063160bc83f14610181578063169bde2b1461013c575b600080fd5b604051600081526020015b60405180910390f35b60405160008152602001610147565b61017361016d366004610257565b50600090565b604051908152602001610147565b61019261018f36600461027a565b50565b005b61019261018f3660046102cb565b6101926101b03660046102e8565b5050565b6101c261016d3660046102cb565b6040516001600160a01b039091168152602001610147565b6101926101b0366004610376565b61019261018f3660046103a2565b61020461016d36600461027a565b6040519015158152602001610147565b60006101c2565b6101736102293660046103bd565b600092915050565b61019261018f3660046103f6565b60006040828403121561025157600080fd5b50919050565b60006040828403121561026957600080fd5b610273838361023f565b9392505050565b60006020828403121561028c57600080fd5b813567ffffffffffffffff8111156102a357600080fd5b8201610100818503121561027357600080fd5b6001600160a01b038116811461018f57600080fd5b6000602082840312156102dd57600080fd5b8135610273816102b6565b600080602083850312156102fb57600080fd5b823567ffffffffffffffff8082111561031357600080fd5b818501915085601f83011261032757600080fd5b81358181111561033657600080fd5b8660208260051b850101111561034b57600080fd5b60209290920196919550909350505050565b803563ffffffff8116811461037157600080fd5b919050565b6000806040838503121561038957600080fd5b823591506103996020840161035d565b90509250929050565b6000602082840312156103b457600080fd5b6102738261035d565b600080604083850312156103d057600080fd5b82356103db816102b6565b915060208301356103eb816102b6565b809150509250929050565b60006020828403121561040857600080fd5b813561ffff8116811461027357600080fdfea264697066735822122081f98d67ec1bf0c833e3b2fecdfd3ed50ae6db587a6de9f89db778ae15cb999364736f6c634300080c0033","sourceMap":"243:5949:84:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1102:62;;;1154:6;158:42:113;;146:2;131:18;1102:62:84;;;;;;;;1883:73;;;1154:6;355:38:113;;343:2;328:18;1883:73:84;211:188:113;2015:103:84;;;;;;:::i;:::-;-1:-1:-1;2107:7:84;;2015:103;;;;992:25:113;;;980:2;965:18;2015:103:84;846:177:113;4523:68:84;;;;;;:::i;:::-;;;;;5184:63;;;;;;:::i;3292:71::-;;;;;;:::i;:::-;;;;1578:70;;;;;;:::i;:::-;;;-1:-1:-1;;;;;2635:32:113;;;2617:51;;2605:2;2590:18;1578:70:84;2471:203:113;4921:106:84;;;;;;:::i;5498:64::-;;;;;;:::i;2422:86::-;;;;;;:::i;:::-;;;3458:14:113;;3451:22;3433:41;;3421:2;3406:18;2422:86:84;3293:187:113;397:60:84;1154:6;397:60;1102:62;1720:92;;;;;;:::i;:::-;1801:7;1720:92;;;;;5793:78;;;;;;:::i;404:168:113:-;477:5;522:2;513:6;508:3;504:16;500:25;497:45;;;538:1;535;528:12;497:45;-1:-1:-1;560:6:113;404:168;-1:-1:-1;404:168:113:o;577:264::-;676:6;729:2;717:9;708:7;704:23;700:32;697:52;;;745:1;742;735:12;697:52;768:67;827:7;816:9;768:67;:::i;:::-;758:77;577:264;-1:-1:-1;;;577:264:113:o;1028:398::-;1125:6;1178:2;1166:9;1157:7;1153:23;1149:32;1146:52;;;1194:1;1191;1184:12;1146:52;1234:9;1221:23;1267:18;1259:6;1256:30;1253:50;;;1299:1;1296;1289:12;1253:50;1322:22;;1378:3;1360:16;;;1356:26;1353:46;;;1395:1;1392;1385:12;1431:131;-1:-1:-1;;;;;1506:31:113;;1496:42;;1486:70;;1552:1;1549;1542:12;1567:247;1626:6;1679:2;1667:9;1658:7;1654:23;1650:32;1647:52;;;1695:1;1692;1685:12;1647:52;1734:9;1721:23;1753:31;1778:5;1753:31;:::i;1819:647::-;1937:6;1945;1998:2;1986:9;1977:7;1973:23;1969:32;1966:52;;;2014:1;2011;2004:12;1966:52;2054:9;2041:23;2083:18;2124:2;2116:6;2113:14;2110:34;;;2140:1;2137;2130:12;2110:34;2178:6;2167:9;2163:22;2153:32;;2223:7;2216:4;2212:2;2208:13;2204:27;2194:55;;2245:1;2242;2235:12;2194:55;2285:2;2272:16;2311:2;2303:6;2300:14;2297:34;;;2327:1;2324;2317:12;2297:34;2380:7;2375:2;2365:6;2362:1;2358:14;2354:2;2350:23;2346:32;2343:45;2340:65;;;2401:1;2398;2391:12;2340:65;2432:2;2424:11;;;;;2454:6;;-1:-1:-1;1819:647:113;;-1:-1:-1;;;;1819:647:113:o;2679:163::-;2746:20;;2806:10;2795:22;;2785:33;;2775:61;;2832:1;2829;2822:12;2775:61;2679:163;;;:::o;2847:252::-;2914:6;2922;2975:2;2963:9;2954:7;2950:23;2946:32;2943:52;;;2991:1;2988;2981:12;2943:52;3027:9;3014:23;3004:33;;3056:37;3089:2;3078:9;3074:18;3056:37;:::i;:::-;3046:47;;2847:252;;;;;:::o;3104:184::-;3162:6;3215:2;3203:9;3194:7;3190:23;3186:32;3183:52;;;3231:1;3228;3221:12;3183:52;3254:28;3272:9;3254:28;:::i;3485:403::-;3568:6;3576;3629:2;3617:9;3608:7;3604:23;3600:32;3597:52;;;3645:1;3642;3635:12;3597:52;3684:9;3671:23;3703:31;3728:5;3703:31;:::i;:::-;3753:5;-1:-1:-1;3810:2:113;3795:18;;3782:32;3823:33;3782:32;3823:33;:::i;:::-;3875:7;3865:17;;;3485:403;;;;;:::o;4075:272::-;4133:6;4186:2;4174:9;4165:7;4161:23;4157:32;4154:52;;;4202:1;4199;4192:12;4154:52;4241:9;4228:23;4291:6;4284:5;4280:18;4273:5;4270:29;4260:57;;4313:1;4310;4303:12","linkReferences":{}},"methodIdentifiers":{"GENESIS_PAYMENT_TIMESTAMP()":"2cfd45eb","MAX_FUTURE_LENGTH()":"04a0c502","MAX_PAYMENT_DURATION()":"ee619597","MAX_RETROACTIVE_LENGTH()":"37838ed0","activationDelay()":"3a8c0786","calculateEarnerLeafHash((address,bytes32))":"149bc872","calculateTokenLeafHash((address,uint256))":"f8cd8448","calculationIntervalSeconds()":"169bde2b","checkClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]))":"5e9d8348","claimerFor(address)":"2b9f64a4","cumulativeClaimed(address,address)":"865c6953","globalOperatorCommissionBips()":"092db007","payAllForRange(((address,uint96)[],address,uint256,uint32,uint32)[])":"b5715284","payForRange(((address,uint96)[],address,uint256,uint32,uint32)[])":"1b445516","paymentUpdater()":"66d3b16b","processClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]))":"160bc83f","setActivationDelay(uint32)":"58baaa3e","setClaimerFor(address)":"a0169ddd","setGlobalOperatorCommission(uint16)":"e221b245","setPaymentUpdater(address)":"18190f53","submitRoot(bytes32,uint32)":"3efe1db6"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"oldActivationDelay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newActivationDelay\",\"type\":\"uint32\"}],\"name\":\"ActivationDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"oldCalculationIntervalSeconds\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newCalculationIntervalSeconds\",\"type\":\"uint32\"}],\"name\":\"CalculationIntervalSecondsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldClaimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"ClaimerForSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"paymentCalculationEndTimestamp\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"activatedAt\",\"type\":\"uint32\"}],\"name\":\"DistributionRootSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"oldGlobalCommissionBips\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newGlobalCommissionBips\",\"type\":\"uint16\"}],\"name\":\"GlobalCommissionBipsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payAllForRangeSubmitter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"oldValue\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"newValue\",\"type\":\"bool\"}],\"name\":\"PayAllForRangeSubmitterSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimedAmount\",\"type\":\"uint256\"}],\"name\":\"PaymentClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldPaymentUpdater\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPaymentUpdater\",\"type\":\"address\"}],\"name\":\"PaymentUpdaterSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"paymentNonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"rangePaymentHash\",\"type\":\"bytes32\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IPaymentCoordinator.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IPaymentCoordinator.RangePayment\",\"name\":\"rangePayment\",\"type\":\"tuple\"}],\"name\":\"RangePaymentCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"paymentNonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"rangePaymentHash\",\"type\":\"bytes32\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IPaymentCoordinator.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IPaymentCoordinator.RangePayment\",\"name\":\"rangePayment\",\"type\":\"tuple\"}],\"name\":\"RangePaymentForAllCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GENESIS_PAYMENT_TIMESTAMP\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FUTURE_LENGTH\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PAYMENT_DURATION\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_RETROACTIVE_LENGTH\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activationDelay\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"earnerTokenRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPaymentCoordinator.EarnerTreeMerkleLeaf\",\"name\":\"leaf\",\"type\":\"tuple\"}],\"name\":\"calculateEarnerLeafHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeEarnings\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymentCoordinator.TokenTreeMerkleLeaf\",\"name\":\"leaf\",\"type\":\"tuple\"}],\"name\":\"calculateTokenLeafHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculationIntervalSeconds\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"earnerIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"earnerTreeProof\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"earnerTokenRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPaymentCoordinator.EarnerTreeMerkleLeaf\",\"name\":\"earnerLeaf\",\"type\":\"tuple\"},{\"internalType\":\"uint32[]\",\"name\":\"tokenIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"tokenTreeProofs\",\"type\":\"bytes[]\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeEarnings\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymentCoordinator.TokenTreeMerkleLeaf[]\",\"name\":\"tokenLeaves\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IPaymentCoordinator.PaymentMerkleClaim\",\"name\":\"claim\",\"type\":\"tuple\"}],\"name\":\"checkClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"}],\"name\":\"claimerFor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"cumulativeClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalOperatorCommissionBips\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IPaymentCoordinator.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"internalType\":\"struct IPaymentCoordinator.RangePayment[]\",\"name\":\"rangePayment\",\"type\":\"tuple[]\"}],\"name\":\"payAllForRange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IPaymentCoordinator.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"internalType\":\"struct IPaymentCoordinator.RangePayment[]\",\"name\":\"rangePayments\",\"type\":\"tuple[]\"}],\"name\":\"payForRange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentUpdater\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"rootIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"earnerIndex\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"earnerTreeProof\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"earnerTokenRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPaymentCoordinator.EarnerTreeMerkleLeaf\",\"name\":\"earnerLeaf\",\"type\":\"tuple\"},{\"internalType\":\"uint32[]\",\"name\":\"tokenIndices\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"tokenTreeProofs\",\"type\":\"bytes[]\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeEarnings\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymentCoordinator.TokenTreeMerkleLeaf[]\",\"name\":\"tokenLeaves\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IPaymentCoordinator.PaymentMerkleClaim\",\"name\":\"claim\",\"type\":\"tuple\"}],\"name\":\"processClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_activationDelay\",\"type\":\"uint32\"}],\"name\":\"setActivationDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"setClaimerFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_globalCommissionBips\",\"type\":\"uint16\"}],\"name\":\"setGlobalOperatorCommission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_paymentUpdater\",\"type\":\"address\"}],\"name\":\"setPaymentUpdater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"paymentCalculationEndTimestamp\",\"type\":\"uint32\"}],\"name\":\"submitRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"calculationIntervalSeconds()\":{\"details\":\"Payment durations must be multiples of this interval.\"},\"payForRange(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"details\":\"Expected to be called by the ServiceManager of the AVS on behalf of which the payment is being madeThe duration of the `rangePayment` cannot exceed `MAX_PAYMENT_DURATION`The tokens are sent to the `PaymentCoordinator` contractStrategies must be in ascending order of addresses to check for duplicatesThis function will revert if the `rangePayment` is malformed, e.g. if the `strategies` and `weights` arrays are of non-equal lengths\",\"params\":{\"rangePayments\":\"The range payments being created\"}},\"processClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]))\":{\"details\":\"only callable by the valid claimer, that is if claimerFor[claim.earner] is address(0) then only the earner can claim, otherwise only claimerFor[claim.earner] can claim the payments.\",\"params\":{\"claim\":\"The PaymentMerkleClaim to be processed. Contains the root index, earner, payment leaves, and required proofs\"}},\"setActivationDelay(uint32)\":{\"details\":\"Only callable by the contract owner\",\"params\":{\"_activationDelay\":\"Delay in timestamp before a posted root can be claimed against\"}},\"setClaimerFor(address)\":{\"details\":\"Only callable by the `earner`\",\"params\":{\"claimer\":\"The address of the entity that can claim payments on behalf of the earner\"}},\"setGlobalOperatorCommission(uint16)\":{\"details\":\"Only callable by the contract owner\",\"params\":{\"_globalCommissionBips\":\"The commission for all operators across all avss\"}},\"setPaymentUpdater(address)\":{\"details\":\"Only callable by the contract owner\"},\"submitRoot(bytes32,uint32)\":{\"details\":\"Only callable by the paymentUpdater\",\"params\":{\"paymentCalculationEndTimestamp\":\"The timestamp until which payments have been calculated\",\"root\":\"The merkle root of the distribution\"}}},\"version\":1},\"userdoc\":{\"events\":{\"DistributionRootSubmitted(uint32,bytes32,uint32,uint32)\":{\"notice\":\"rootIndex is the specific array index of the newly created root in the storage array\"},\"PaymentClaimed(bytes32,address,address,address,uint256)\":{\"notice\":\"root is one of the submitted distribution roots that was claimed against\"},\"PaymentUpdaterSet(address,address)\":{\"notice\":\"paymentUpdater is responsible for submiting DistributionRoots, only owner can set paymentUpdater\"},\"RangePaymentCreated(address,uint256,bytes32,((address,uint96)[],address,uint256,uint32,uint32))\":{\"notice\":\"emitted when an AVS creates a valid RangePayment\"},\"RangePaymentForAllCreated(address,uint256,bytes32,((address,uint96)[],address,uint256,uint32,uint32))\":{\"notice\":\"emitted when a valid RangePayment is created for all stakers by a valid submitter\"}},\"kind\":\"user\",\"methods\":{\"GENESIS_PAYMENT_TIMESTAMP()\":{\"notice\":\"absolute min timestamp that a payment can start at\"},\"MAX_FUTURE_LENGTH()\":{\"notice\":\"max amount of time that a payment can start in the future\"},\"MAX_PAYMENT_DURATION()\":{\"notice\":\"The maximum amount of time that a range payment can end in the future\"},\"MAX_RETROACTIVE_LENGTH()\":{\"notice\":\"max amount of time that a payment can start in the past\"},\"activationDelay()\":{\"notice\":\"Delay in timestamp before a posted root can be claimed against\"},\"calculateEarnerLeafHash((address,bytes32))\":{\"notice\":\"return the hash of the earner's leaf\"},\"calculateTokenLeafHash((address,uint256))\":{\"notice\":\"returns the hash of the earner's token leaf\"},\"calculationIntervalSeconds()\":{\"notice\":\"The interval in seconds at which the calculation for range payment distribution is done.\"},\"checkClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]))\":{\"notice\":\"returns 'true' if the claim would currently pass the check in `processClaims` but will revert if not valid\"},\"claimerFor(address)\":{\"notice\":\"Mapping: earner => the address of the entity to which new payments are directed on behalf of the earner\"},\"cumulativeClaimed(address,address)\":{\"notice\":\"Mapping: claimer => token => total amount claimed\"},\"globalOperatorCommissionBips()\":{\"notice\":\"the commission for all operators across all avss\"},\"payAllForRange(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"notice\":\"similar to `payForRange` except the payment is split amongst *all* stakers rather than just those delegated to operators who are registered to a single avs and is a permissioned call based on isPayAllForRangeSubmitter mapping.\"},\"payForRange(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"notice\":\"Creates a new range payment on behalf of an AVS, to be split amongst the set of stakers delegated to operators who are registered to the `avs`\"},\"paymentUpdater()\":{\"notice\":\"The address of the entity that can update the contract with new merkle roots\"},\"processClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]))\":{\"notice\":\"Claim payments against a given root (read from distributionRoots[claim.rootIndex]). Earnings are cumulative so earners don't have to claim against all distribution roots they have earnings for, they can simply claim against the latest root and the contract will calculate the difference between their cumulativeEarnings and cumulativeClaimed. This difference is then transferred to claimerFor[claim.earner]\"},\"setActivationDelay(uint32)\":{\"notice\":\"Sets the delay in timestamp before a posted root can be claimed against\"},\"setClaimerFor(address)\":{\"notice\":\"Sets the address of the entity that can claim payments on behalf of the earner (msg.sender)\"},\"setGlobalOperatorCommission(uint16)\":{\"notice\":\"Sets the global commission for all operators across all avss\"},\"setPaymentUpdater(address)\":{\"notice\":\"Sets the permissioned `paymentUpdater` address which can post new roots\"},\"submitRoot(bytes32,uint32)\":{\"notice\":\"Creates a new distribution root. activatedAt is set to block.timestamp + activationDelay\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-middleware/test/mocks/PaymentCoordinatorMock.sol\":\"PaymentCoordinatorMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@credible-squaring/=src/\",\":@eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/\",\":@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d\",\"dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPaymentCoordinator.sol\":{\"keccak256\":\"0xf08a2adc0ec07ec0fd4711adab5f8a72fbb0dcafb62ee032b983b51b167348e6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://702dda0a24d175188d87a9d924ce8244ad626b01aba547e9a4368811991e8950\",\"dweb:/ipfs/QmUgsi4BUcqXvtcLTQvk3wfVHCaCGwKc2gNixx4bz58csY\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73\",\"dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ\"]},\"lib/eigenlayer-middleware/test/mocks/PaymentCoordinatorMock.sol\":{\"keccak256\":\"0xededbeb1cafa8351687c9a65fcc40ef9017ad0c6ac685e9e3754caf270131959\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a86775e34dc4f16f6c09a7b7f9a40830f88b290dfc808279309d2c052fc7ab2a\",\"dweb:/ipfs/QmZbQmragkBVeS1bEEx3jYA3Pb36tKhxuEH72BkYs3x7GS\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.12+commit.f00d7308"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint32","name":"oldActivationDelay","type":"uint32","indexed":false},{"internalType":"uint32","name":"newActivationDelay","type":"uint32","indexed":false}],"type":"event","name":"ActivationDelaySet","anonymous":false},{"inputs":[{"internalType":"uint32","name":"oldCalculationIntervalSeconds","type":"uint32","indexed":false},{"internalType":"uint32","name":"newCalculationIntervalSeconds","type":"uint32","indexed":false}],"type":"event","name":"CalculationIntervalSecondsSet","anonymous":false},{"inputs":[{"internalType":"address","name":"earner","type":"address","indexed":true},{"internalType":"address","name":"oldClaimer","type":"address","indexed":true},{"internalType":"address","name":"claimer","type":"address","indexed":true}],"type":"event","name":"ClaimerForSet","anonymous":false},{"inputs":[{"internalType":"uint32","name":"rootIndex","type":"uint32","indexed":true},{"internalType":"bytes32","name":"root","type":"bytes32","indexed":true},{"internalType":"uint32","name":"paymentCalculationEndTimestamp","type":"uint32","indexed":false},{"internalType":"uint32","name":"activatedAt","type":"uint32","indexed":false}],"type":"event","name":"DistributionRootSubmitted","anonymous":false},{"inputs":[{"internalType":"uint16","name":"oldGlobalCommissionBips","type":"uint16","indexed":false},{"internalType":"uint16","name":"newGlobalCommissionBips","type":"uint16","indexed":false}],"type":"event","name":"GlobalCommissionBipsSet","anonymous":false},{"inputs":[{"internalType":"address","name":"payAllForRangeSubmitter","type":"address","indexed":true},{"internalType":"bool","name":"oldValue","type":"bool","indexed":true},{"internalType":"bool","name":"newValue","type":"bool","indexed":true}],"type":"event","name":"PayAllForRangeSubmitterSet","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"root","type":"bytes32","indexed":false},{"internalType":"address","name":"earner","type":"address","indexed":true},{"internalType":"address","name":"claimer","type":"address","indexed":true},{"internalType":"contract IERC20","name":"token","type":"address","indexed":true},{"internalType":"uint256","name":"claimedAmount","type":"uint256","indexed":false}],"type":"event","name":"PaymentClaimed","anonymous":false},{"inputs":[{"internalType":"address","name":"oldPaymentUpdater","type":"address","indexed":true},{"internalType":"address","name":"newPaymentUpdater","type":"address","indexed":true}],"type":"event","name":"PaymentUpdaterSet","anonymous":false},{"inputs":[{"internalType":"address","name":"avs","type":"address","indexed":true},{"internalType":"uint256","name":"paymentNonce","type":"uint256","indexed":true},{"internalType":"bytes32","name":"rangePaymentHash","type":"bytes32","indexed":true},{"internalType":"struct IPaymentCoordinator.RangePayment","name":"rangePayment","type":"tuple","components":[{"internalType":"struct IPaymentCoordinator.StrategyAndMultiplier[]","name":"strategiesAndMultipliers","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint32","name":"startTimestamp","type":"uint32"},{"internalType":"uint32","name":"duration","type":"uint32"}],"indexed":false}],"type":"event","name":"RangePaymentCreated","anonymous":false},{"inputs":[{"internalType":"address","name":"submitter","type":"address","indexed":true},{"internalType":"uint256","name":"paymentNonce","type":"uint256","indexed":true},{"internalType":"bytes32","name":"rangePaymentHash","type":"bytes32","indexed":true},{"internalType":"struct IPaymentCoordinator.RangePayment","name":"rangePayment","type":"tuple","components":[{"internalType":"struct IPaymentCoordinator.StrategyAndMultiplier[]","name":"strategiesAndMultipliers","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint32","name":"startTimestamp","type":"uint32"},{"internalType":"uint32","name":"duration","type":"uint32"}],"indexed":false}],"type":"event","name":"RangePaymentForAllCreated","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"GENESIS_PAYMENT_TIMESTAMP","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"MAX_FUTURE_LENGTH","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"MAX_PAYMENT_DURATION","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"MAX_RETROACTIVE_LENGTH","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"activationDelay","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[{"internalType":"struct IPaymentCoordinator.EarnerTreeMerkleLeaf","name":"leaf","type":"tuple","components":[{"internalType":"address","name":"earner","type":"address"},{"internalType":"bytes32","name":"earnerTokenRoot","type":"bytes32"}]}],"stateMutability":"pure","type":"function","name":"calculateEarnerLeafHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"struct IPaymentCoordinator.TokenTreeMerkleLeaf","name":"leaf","type":"tuple","components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"cumulativeEarnings","type":"uint256"}]}],"stateMutability":"pure","type":"function","name":"calculateTokenLeafHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"calculationIntervalSeconds","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[{"internalType":"struct IPaymentCoordinator.PaymentMerkleClaim","name":"claim","type":"tuple","components":[{"internalType":"uint32","name":"rootIndex","type":"uint32"},{"internalType":"uint32","name":"earnerIndex","type":"uint32"},{"internalType":"bytes","name":"earnerTreeProof","type":"bytes"},{"internalType":"struct IPaymentCoordinator.EarnerTreeMerkleLeaf","name":"earnerLeaf","type":"tuple","components":[{"internalType":"address","name":"earner","type":"address"},{"internalType":"bytes32","name":"earnerTokenRoot","type":"bytes32"}]},{"internalType":"uint32[]","name":"tokenIndices","type":"uint32[]"},{"internalType":"bytes[]","name":"tokenTreeProofs","type":"bytes[]"},{"internalType":"struct IPaymentCoordinator.TokenTreeMerkleLeaf[]","name":"tokenLeaves","type":"tuple[]","components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"cumulativeEarnings","type":"uint256"}]}]}],"stateMutability":"view","type":"function","name":"checkClaim","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"earner","type":"address"}],"stateMutability":"view","type":"function","name":"claimerFor","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"claimer","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"cumulativeClaimed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"globalOperatorCommissionBips","outputs":[{"internalType":"uint16","name":"","type":"uint16"}]},{"inputs":[{"internalType":"struct IPaymentCoordinator.RangePayment[]","name":"rangePayment","type":"tuple[]","components":[{"internalType":"struct IPaymentCoordinator.StrategyAndMultiplier[]","name":"strategiesAndMultipliers","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint32","name":"startTimestamp","type":"uint32"},{"internalType":"uint32","name":"duration","type":"uint32"}]}],"stateMutability":"nonpayable","type":"function","name":"payAllForRange"},{"inputs":[{"internalType":"struct IPaymentCoordinator.RangePayment[]","name":"rangePayments","type":"tuple[]","components":[{"internalType":"struct IPaymentCoordinator.StrategyAndMultiplier[]","name":"strategiesAndMultipliers","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint32","name":"startTimestamp","type":"uint32"},{"internalType":"uint32","name":"duration","type":"uint32"}]}],"stateMutability":"nonpayable","type":"function","name":"payForRange"},{"inputs":[],"stateMutability":"view","type":"function","name":"paymentUpdater","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"struct IPaymentCoordinator.PaymentMerkleClaim","name":"claim","type":"tuple","components":[{"internalType":"uint32","name":"rootIndex","type":"uint32"},{"internalType":"uint32","name":"earnerIndex","type":"uint32"},{"internalType":"bytes","name":"earnerTreeProof","type":"bytes"},{"internalType":"struct IPaymentCoordinator.EarnerTreeMerkleLeaf","name":"earnerLeaf","type":"tuple","components":[{"internalType":"address","name":"earner","type":"address"},{"internalType":"bytes32","name":"earnerTokenRoot","type":"bytes32"}]},{"internalType":"uint32[]","name":"tokenIndices","type":"uint32[]"},{"internalType":"bytes[]","name":"tokenTreeProofs","type":"bytes[]"},{"internalType":"struct IPaymentCoordinator.TokenTreeMerkleLeaf[]","name":"tokenLeaves","type":"tuple[]","components":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"cumulativeEarnings","type":"uint256"}]}]}],"stateMutability":"nonpayable","type":"function","name":"processClaim"},{"inputs":[{"internalType":"uint32","name":"_activationDelay","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"setActivationDelay"},{"inputs":[{"internalType":"address","name":"claimer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setClaimerFor"},{"inputs":[{"internalType":"uint16","name":"_globalCommissionBips","type":"uint16"}],"stateMutability":"nonpayable","type":"function","name":"setGlobalOperatorCommission"},{"inputs":[{"internalType":"address","name":"_paymentUpdater","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setPaymentUpdater"},{"inputs":[{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"uint32","name":"paymentCalculationEndTimestamp","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"submitRoot"}],"devdoc":{"kind":"dev","methods":{"calculationIntervalSeconds()":{"details":"Payment durations must be multiples of this interval."},"payForRange(((address,uint96)[],address,uint256,uint32,uint32)[])":{"details":"Expected to be called by the ServiceManager of the AVS on behalf of which the payment is being madeThe duration of the `rangePayment` cannot exceed `MAX_PAYMENT_DURATION`The tokens are sent to the `PaymentCoordinator` contractStrategies must be in ascending order of addresses to check for duplicatesThis function will revert if the `rangePayment` is malformed, e.g. if the `strategies` and `weights` arrays are of non-equal lengths","params":{"rangePayments":"The range payments being created"}},"processClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]))":{"details":"only callable by the valid claimer, that is if claimerFor[claim.earner] is address(0) then only the earner can claim, otherwise only claimerFor[claim.earner] can claim the payments.","params":{"claim":"The PaymentMerkleClaim to be processed. Contains the root index, earner, payment leaves, and required proofs"}},"setActivationDelay(uint32)":{"details":"Only callable by the contract owner","params":{"_activationDelay":"Delay in timestamp before a posted root can be claimed against"}},"setClaimerFor(address)":{"details":"Only callable by the `earner`","params":{"claimer":"The address of the entity that can claim payments on behalf of the earner"}},"setGlobalOperatorCommission(uint16)":{"details":"Only callable by the contract owner","params":{"_globalCommissionBips":"The commission for all operators across all avss"}},"setPaymentUpdater(address)":{"details":"Only callable by the contract owner"},"submitRoot(bytes32,uint32)":{"details":"Only callable by the paymentUpdater","params":{"paymentCalculationEndTimestamp":"The timestamp until which payments have been calculated","root":"The merkle root of the distribution"}}},"version":1},"userdoc":{"kind":"user","methods":{"GENESIS_PAYMENT_TIMESTAMP()":{"notice":"absolute min timestamp that a payment can start at"},"MAX_FUTURE_LENGTH()":{"notice":"max amount of time that a payment can start in the future"},"MAX_PAYMENT_DURATION()":{"notice":"The maximum amount of time that a range payment can end in the future"},"MAX_RETROACTIVE_LENGTH()":{"notice":"max amount of time that a payment can start in the past"},"activationDelay()":{"notice":"Delay in timestamp before a posted root can be claimed against"},"calculateEarnerLeafHash((address,bytes32))":{"notice":"return the hash of the earner's leaf"},"calculateTokenLeafHash((address,uint256))":{"notice":"returns the hash of the earner's token leaf"},"calculationIntervalSeconds()":{"notice":"The interval in seconds at which the calculation for range payment distribution is done."},"checkClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]))":{"notice":"returns 'true' if the claim would currently pass the check in `processClaims` but will revert if not valid"},"claimerFor(address)":{"notice":"Mapping: earner => the address of the entity to which new payments are directed on behalf of the earner"},"cumulativeClaimed(address,address)":{"notice":"Mapping: claimer => token => total amount claimed"},"globalOperatorCommissionBips()":{"notice":"the commission for all operators across all avss"},"payAllForRange(((address,uint96)[],address,uint256,uint32,uint32)[])":{"notice":"similar to `payForRange` except the payment is split amongst *all* stakers rather than just those delegated to operators who are registered to a single avs and is a permissioned call based on isPayAllForRangeSubmitter mapping."},"payForRange(((address,uint96)[],address,uint256,uint32,uint32)[])":{"notice":"Creates a new range payment on behalf of an AVS, to be split amongst the set of stakers delegated to operators who are registered to the `avs`"},"paymentUpdater()":{"notice":"The address of the entity that can update the contract with new merkle roots"},"processClaim((uint32,uint32,bytes,(address,bytes32),uint32[],bytes[],(address,uint256)[]))":{"notice":"Claim payments against a given root (read from distributionRoots[claim.rootIndex]). Earnings are cumulative so earners don't have to claim against all distribution roots they have earnings for, they can simply claim against the latest root and the contract will calculate the difference between their cumulativeEarnings and cumulativeClaimed. This difference is then transferred to claimerFor[claim.earner]"},"setActivationDelay(uint32)":{"notice":"Sets the delay in timestamp before a posted root can be claimed against"},"setClaimerFor(address)":{"notice":"Sets the address of the entity that can claim payments on behalf of the earner (msg.sender)"},"setGlobalOperatorCommission(uint16)":{"notice":"Sets the global commission for all operators across all avss"},"setPaymentUpdater(address)":{"notice":"Sets the permissioned `paymentUpdater` address which can post new roots"},"submitRoot(bytes32,uint32)":{"notice":"Creates a new distribution root. activatedAt is set to block.timestamp + activationDelay"}},"version":1}},"settings":{"remappings":["@credible-squaring/=src/","@eigenlayer-middleware/=lib/eigenlayer-middleware/","@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/","@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/","@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable/","@openzeppelin/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/","ds-test/=lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/","eigenlayer-middleware/=lib/eigenlayer-middleware/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/eigenlayer-middleware/test/mocks/PaymentCoordinatorMock.sol":"PaymentCoordinatorMock"},"evmVersion":"london","libraries":{}},"sources":{"lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b","urls":["bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34","dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol":{"keccak256":"0x9de8dd682bc0d812bbd6583c0231cbf35448d5eff58b74a93efa64cb9a768c49","urls":["bzz-raw://c00d6c675b9c72b092d287fe85fd37782588df32b8eb59ab4c7db7a86be25e7d","dweb:/ipfs/QmeYokY3HhAdbBaCPdHg3PgQEdRCDFEJy3Wf7VtgHBkQSx"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPaymentCoordinator.sol":{"keccak256":"0xf08a2adc0ec07ec0fd4711adab5f8a72fbb0dcafb62ee032b983b51b167348e6","urls":["bzz-raw://702dda0a24d175188d87a9d924ce8244ad626b01aba547e9a4368811991e8950","dweb:/ipfs/QmUgsi4BUcqXvtcLTQvk3wfVHCaCGwKc2gNixx4bz58csY"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol":{"keccak256":"0xc530c6a944b70051fd0dac0222de9a4b5baadeaf94ad194daac6ad8d2ace7420","urls":["bzz-raw://3767df0364ce835b52e786d2851431eb9223fe4747602107505477e162231d73","dweb:/ipfs/QmZkH5bKUygQrJomndNaQqkefVRW4rRefCa8HPJ5HMczxJ"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/test/mocks/PaymentCoordinatorMock.sol":{"keccak256":"0xededbeb1cafa8351687c9a65fcc40ef9017ad0c6ac685e9e3754caf270131959","urls":["bzz-raw://a86775e34dc4f16f6c09a7b7f9a40830f88b290dfc808279309d2c052fc7ab2a","dweb:/ipfs/QmZbQmragkBVeS1bEEx3jYA3Pb36tKhxuEH72BkYs3x7GS"],"license":"BUSL-1.1"}},"version":1},"id":84}